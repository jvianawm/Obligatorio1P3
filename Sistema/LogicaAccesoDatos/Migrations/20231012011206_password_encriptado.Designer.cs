// <auto-generated />
using System;
using LogicaAccesoDatos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LogicaAccesoDatos.Migrations
{
    [DbContext(typeof(PlataformaContext))]
    [Migration("20231012011206_password_encriptado")]
    partial class password_encriptado
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LogicaNegocio.Dominio.Amenaza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EcosistemaId")
                        .HasColumnType("int");

                    b.Property<int?>("EspecieMarinaId")
                        .HasColumnType("int");

                    b.Property<int>("GradoPeligrosidad")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EcosistemaId");

                    b.HasIndex("EspecieMarinaId");

                    b.ToTable("Amenazas");
                });

            modelBuilder.Entity("LogicaNegocio.Ecosistema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Area")
                        .HasColumnType("int");

                    b.Property<string>("DescripcionCaracteristicas")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Latitud")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Longitud")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.ToTable("Ecosistemas");
                });

            modelBuilder.Entity("LogicaNegocio.EspecieMarina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("EcosistemaId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<string>("NombreCientifico")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NombreVulgar")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RangoLongitud")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RangoPeso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EcosistemaId");

                    b.HasIndex("EstadoId");

                    b.ToTable("EspecieMarinas");
                });

            modelBuilder.Entity("LogicaNegocio.EstadoConservacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EstadoCons")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("EstadoConservacion");
                });

            modelBuilder.Entity("LogicaNegocio.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EcosistemaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("EcosistemaId");

                    b.ToTable("Pais");
                });

            modelBuilder.Entity("LogicaNegocio.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordEncriptado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Alias")
                        .IsUnique();

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Amenaza", b =>
                {
                    b.HasOne("LogicaNegocio.Ecosistema", null)
                        .WithMany("Amenazas")
                        .HasForeignKey("EcosistemaId");

                    b.HasOne("LogicaNegocio.EspecieMarina", null)
                        .WithMany("amenazas")
                        .HasForeignKey("EspecieMarinaId");
                });

            modelBuilder.Entity("LogicaNegocio.Ecosistema", b =>
                {
                    b.HasOne("LogicaNegocio.EstadoConservacion", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("LogicaNegocio.EspecieMarina", b =>
                {
                    b.HasOne("LogicaNegocio.Ecosistema", null)
                        .WithMany("EspecieMarinas")
                        .HasForeignKey("EcosistemaId");

                    b.HasOne("LogicaNegocio.EstadoConservacion", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("LogicaNegocio.Pais", b =>
                {
                    b.HasOne("LogicaNegocio.Ecosistema", null)
                        .WithMany("Pais")
                        .HasForeignKey("EcosistemaId");
                });

            modelBuilder.Entity("LogicaNegocio.Ecosistema", b =>
                {
                    b.Navigation("Amenazas");

                    b.Navigation("EspecieMarinas");

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("LogicaNegocio.EspecieMarina", b =>
                {
                    b.Navigation("amenazas");
                });
#pragma warning restore 612, 618
        }
    }
}
